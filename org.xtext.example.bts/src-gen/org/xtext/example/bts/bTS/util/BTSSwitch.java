/**
 * generated by Xtext 2.25.0
 */
package org.xtext.example.bts.bTS.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.xtext.example.bts.bTS.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.xtext.example.bts.bTS.BTSPackage
 * @generated
 */
public class BTSSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static BTSPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BTSSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = BTSPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case BTSPackage.BTS:
      {
        BTS bts = (BTS)theEObject;
        T result = caseBTS(bts);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BTSPackage.TYPE:
      {
        Type type = (Type)theEObject;
        T result = caseType(type);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BTSPackage.BAGGAGE:
      {
        Baggage baggage = (Baggage)theEObject;
        T result = caseBaggage(baggage);
        if (result == null) result = caseType(baggage);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BTSPackage.BOOKING:
      {
        Booking booking = (Booking)theEObject;
        T result = caseBooking(booking);
        if (result == null) result = caseType(booking);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BTSPackage.TICKET:
      {
        Ticket ticket = (Ticket)theEObject;
        T result = caseTicket(ticket);
        if (result == null) result = caseType(ticket);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BTSPackage.PASSENGER:
      {
        Passenger passenger = (Passenger)theEObject;
        T result = casePassenger(passenger);
        if (result == null) result = caseType(passenger);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BTSPackage.PAYMENT:
      {
        Payment payment = (Payment)theEObject;
        T result = casePayment(payment);
        if (result == null) result = caseType(payment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BTSPackage.ONLINE_PAYMENT:
      {
        OnlinePayment onlinePayment = (OnlinePayment)theEObject;
        T result = caseOnlinePayment(onlinePayment);
        if (result == null) result = caseType(onlinePayment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BTSPackage.KIOSK:
      {
        KIOSK kiosk = (KIOSK)theEObject;
        T result = caseKIOSK(kiosk);
        if (result == null) result = caseType(kiosk);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BTSPackage.BUS:
      {
        Bus bus = (Bus)theEObject;
        T result = caseBus(bus);
        if (result == null) result = caseType(bus);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BTSPackage.CITY:
      {
        City city = (City)theEObject;
        T result = caseCity(city);
        if (result == null) result = caseType(city);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BTSPackage.SEAT:
      {
        Seat seat = (Seat)theEObject;
        T result = caseSeat(seat);
        if (result == null) result = caseType(seat);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BTS</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BTS</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBTS(BTS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseType(Type object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Baggage</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Baggage</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBaggage(Baggage object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Booking</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Booking</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBooking(Booking object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Ticket</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Ticket</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTicket(Ticket object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Passenger</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Passenger</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePassenger(Passenger object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Payment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Payment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePayment(Payment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Online Payment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Online Payment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOnlinePayment(OnlinePayment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>KIOSK</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>KIOSK</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseKIOSK(KIOSK object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Bus</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Bus</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBus(Bus object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>City</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>City</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCity(City object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Seat</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Seat</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSeat(Seat object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //BTSSwitch
