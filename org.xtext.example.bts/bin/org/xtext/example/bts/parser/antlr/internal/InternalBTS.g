/*
 * generated by Xtext 2.25.0
 */
grammar InternalBTS;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.bts.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.bts.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.bts.services.BTSGrammarAccess;

}

@parser::members {

 	private BTSGrammarAccess grammarAccess;

    public InternalBTSParser(TokenStream input, BTSGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "BTS";
   	}

   	@Override
   	protected BTSGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleBTS
entryRuleBTS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBTSRule()); }
	iv_ruleBTS=ruleBTS
	{ $current=$iv_ruleBTS.current; }
	EOF;

// Rule BTS
ruleBTS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getBTSAccess().getElementsTypeParserRuleCall_0());
			}
			lv_elements_0_0=ruleType
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getBTSRule());
				}
				add(
					$current,
					"elements",
					lv_elements_0_0,
					"org.xtext.example.bts.BTS.Type");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeAccess().getCityParserRuleCall_0());
		}
		this_City_0=ruleCity
		{
			$current = $this_City_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getSeatParserRuleCall_1());
		}
		this_Seat_1=ruleSeat
		{
			$current = $this_Seat_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getBusParserRuleCall_2());
		}
		this_Bus_2=ruleBus
		{
			$current = $this_Bus_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getPassengerParserRuleCall_3());
		}
		this_Passenger_3=rulePassenger
		{
			$current = $this_Passenger_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getTicketParserRuleCall_4());
		}
		this_Ticket_4=ruleTicket
		{
			$current = $this_Ticket_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getBookingParserRuleCall_5());
		}
		this_Booking_5=ruleBooking
		{
			$current = $this_Booking_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getBaggageParserRuleCall_6());
		}
		this_Baggage_6=ruleBaggage
		{
			$current = $this_Baggage_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getPaymentParserRuleCall_7());
		}
		this_Payment_7=rulePayment
		{
			$current = $this_Payment_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getOnlinePaymentParserRuleCall_8());
		}
		this_OnlinePayment_8=ruleOnlinePayment
		{
			$current = $this_OnlinePayment_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getKIOSKParserRuleCall_9());
		}
		this_KIOSK_9=ruleKIOSK
		{
			$current = $this_KIOSK_9.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBaggage
entryRuleBaggage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBaggageRule()); }
	iv_ruleBaggage=ruleBaggage
	{ $current=$iv_ruleBaggage.current; }
	EOF;

// Rule Baggage
ruleBaggage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Baggage'
		{
			newLeafNode(otherlv_0, grammarAccess.getBaggageAccess().getBaggageKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBaggageAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBaggageRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleBooking
entryRuleBooking returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBookingRule()); }
	iv_ruleBooking=ruleBooking
	{ $current=$iv_ruleBooking.current; }
	EOF;

// Rule Booking
ruleBooking returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Booking'
		{
			newLeafNode(otherlv_0, grammarAccess.getBookingAccess().getBookingKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBookingAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBookingRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleTicket
entryRuleTicket returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTicketRule()); }
	iv_ruleTicket=ruleTicket
	{ $current=$iv_ruleTicket.current; }
	EOF;

// Rule Ticket
ruleTicket returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Ticket'
		{
			newLeafNode(otherlv_0, grammarAccess.getTicketAccess().getTicketKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTicketAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTicketRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulePassenger
entryRulePassenger returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPassengerRule()); }
	iv_rulePassenger=rulePassenger
	{ $current=$iv_rulePassenger.current; }
	EOF;

// Rule Passenger
rulePassenger returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Passenger'
		{
			newLeafNode(otherlv_0, grammarAccess.getPassengerAccess().getPassengerKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPassengerAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPassengerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulePayment
entryRulePayment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPaymentRule()); }
	iv_rulePayment=rulePayment
	{ $current=$iv_rulePayment.current; }
	EOF;

// Rule Payment
rulePayment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Payment'
		{
			newLeafNode(otherlv_0, grammarAccess.getPaymentAccess().getPaymentKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPaymentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPaymentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleOnlinePayment
entryRuleOnlinePayment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOnlinePaymentRule()); }
	iv_ruleOnlinePayment=ruleOnlinePayment
	{ $current=$iv_ruleOnlinePayment.current; }
	EOF;

// Rule OnlinePayment
ruleOnlinePayment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='OnlinePayment'
		{
			newLeafNode(otherlv_0, grammarAccess.getOnlinePaymentAccess().getOnlinePaymentKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getOnlinePaymentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOnlinePaymentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='extends'
			{
				newLeafNode(otherlv_2, grammarAccess.getOnlinePaymentAccess().getExtendsKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOnlinePaymentRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getOnlinePaymentAccess().getSuperTypePaymentCrossReference_2_1_0());
					}
				)
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getOnlinePaymentAccess().getLeftCurlyBracketKeyword_3());
		}
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getOnlinePaymentAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleKIOSK
entryRuleKIOSK returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKIOSKRule()); }
	iv_ruleKIOSK=ruleKIOSK
	{ $current=$iv_ruleKIOSK.current; }
	EOF;

// Rule KIOSK
ruleKIOSK returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='KIOSK'
		{
			newLeafNode(otherlv_0, grammarAccess.getKIOSKAccess().getKIOSKKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getKIOSKAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getKIOSKRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='extends'
			{
				newLeafNode(otherlv_2, grammarAccess.getKIOSKAccess().getExtendsKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getKIOSKRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getKIOSKAccess().getSuperTypePaymentCrossReference_2_1_0());
					}
				)
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getKIOSKAccess().getLeftCurlyBracketKeyword_3());
		}
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getKIOSKAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleBus
entryRuleBus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBusRule()); }
	iv_ruleBus=ruleBus
	{ $current=$iv_ruleBus.current; }
	EOF;

// Rule Bus
ruleBus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Bus'
		{
			newLeafNode(otherlv_0, grammarAccess.getBusAccess().getBusKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBusAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBusRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getBusAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getBusAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleCity
entryRuleCity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCityRule()); }
	iv_ruleCity=ruleCity
	{ $current=$iv_ruleCity.current; }
	EOF;

// Rule City
ruleCity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='City'
		{
			newLeafNode(otherlv_0, grammarAccess.getCityAccess().getCityKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCityAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getCityAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCityAccess().getBusstopsPointEnumRuleCall_3_0());
				}
				lv_busstops_3_0=rulePoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCityRule());
					}
					add(
						$current,
						"busstops",
						lv_busstops_3_0,
						"org.xtext.example.bts.BTS.Point");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getCityAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleSeat
entryRuleSeat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSeatRule()); }
	iv_ruleSeat=ruleSeat
	{ $current=$iv_ruleSeat.current; }
	EOF;

// Rule Seat
ruleSeat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Seat'
		{
			newLeafNode(otherlv_0, grammarAccess.getSeatAccess().getSeatKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSeatAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSeatRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Rule Point
rulePoint returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='ARRIVAL_POINT'
			{
				$current = grammarAccess.getPointAccess().getARRIVAL_POINTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPointAccess().getARRIVAL_POINTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='DEPARTURE_POINT'
			{
				$current = grammarAccess.getPointAccess().getDEPARTURE_POINTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPointAccess().getDEPARTURE_POINTEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
