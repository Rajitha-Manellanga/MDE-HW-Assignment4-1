/*
 * generated by Xtext 2.25.0
 */
package org.xtext.example.bts.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.bts.ide.contentassist.antlr.internal.InternalBTSParser;
import org.xtext.example.bts.services.BTSGrammarAccess;

public class BTSParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(BTSGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, BTSGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
			builder.put(grammarAccess.getPointAccess().getAlternatives(), "rule__Point__Alternatives");
			builder.put(grammarAccess.getBaggageAccess().getGroup(), "rule__Baggage__Group__0");
			builder.put(grammarAccess.getBookingAccess().getGroup(), "rule__Booking__Group__0");
			builder.put(grammarAccess.getTicketAccess().getGroup(), "rule__Ticket__Group__0");
			builder.put(grammarAccess.getPassengerAccess().getGroup(), "rule__Passenger__Group__0");
			builder.put(grammarAccess.getPaymentAccess().getGroup(), "rule__Payment__Group__0");
			builder.put(grammarAccess.getOnlinePaymentAccess().getGroup(), "rule__OnlinePayment__Group__0");
			builder.put(grammarAccess.getOnlinePaymentAccess().getGroup_2(), "rule__OnlinePayment__Group_2__0");
			builder.put(grammarAccess.getKIOSKAccess().getGroup(), "rule__KIOSK__Group__0");
			builder.put(grammarAccess.getKIOSKAccess().getGroup_2(), "rule__KIOSK__Group_2__0");
			builder.put(grammarAccess.getBusAccess().getGroup(), "rule__Bus__Group__0");
			builder.put(grammarAccess.getCityAccess().getGroup(), "rule__City__Group__0");
			builder.put(grammarAccess.getSeatAccess().getGroup(), "rule__Seat__Group__0");
			builder.put(grammarAccess.getBTSAccess().getElementsAssignment(), "rule__BTS__ElementsAssignment");
			builder.put(grammarAccess.getBaggageAccess().getNameAssignment_1(), "rule__Baggage__NameAssignment_1");
			builder.put(grammarAccess.getBookingAccess().getNameAssignment_1(), "rule__Booking__NameAssignment_1");
			builder.put(grammarAccess.getTicketAccess().getNameAssignment_1(), "rule__Ticket__NameAssignment_1");
			builder.put(grammarAccess.getPassengerAccess().getNameAssignment_1(), "rule__Passenger__NameAssignment_1");
			builder.put(grammarAccess.getPaymentAccess().getNameAssignment_1(), "rule__Payment__NameAssignment_1");
			builder.put(grammarAccess.getOnlinePaymentAccess().getNameAssignment_1(), "rule__OnlinePayment__NameAssignment_1");
			builder.put(grammarAccess.getOnlinePaymentAccess().getSuperTypeAssignment_2_1(), "rule__OnlinePayment__SuperTypeAssignment_2_1");
			builder.put(grammarAccess.getKIOSKAccess().getNameAssignment_1(), "rule__KIOSK__NameAssignment_1");
			builder.put(grammarAccess.getKIOSKAccess().getSuperTypeAssignment_2_1(), "rule__KIOSK__SuperTypeAssignment_2_1");
			builder.put(grammarAccess.getBusAccess().getNameAssignment_1(), "rule__Bus__NameAssignment_1");
			builder.put(grammarAccess.getCityAccess().getNameAssignment_1(), "rule__City__NameAssignment_1");
			builder.put(grammarAccess.getCityAccess().getBusstopsAssignment_3(), "rule__City__BusstopsAssignment_3");
			builder.put(grammarAccess.getSeatAccess().getNameAssignment_1(), "rule__Seat__NameAssignment_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private BTSGrammarAccess grammarAccess;

	@Override
	protected InternalBTSParser createParser() {
		InternalBTSParser result = new InternalBTSParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public BTSGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(BTSGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
